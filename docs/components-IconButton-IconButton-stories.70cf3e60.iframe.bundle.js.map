{"version":3,"file":"components-IconButton-IconButton-stories.70cf3e60.iframe.bundle.js","mappings":";;;;AA4CA;AACA;;;;;;;;;;AAUA;AAKA;AACA;;;AAGA;AACA;;AAIA;AACA;AACA;;;AAGA;AACA;;;;ACpEA;;AAIA","sources":["webpack://personal-design/./src/components/IconButton/styles.ts","webpack://personal-design/./src/components/Loading/styles.ts"],"sourcesContent":["import styled, { css } from \"styled-components\";\n\nexport type IconButtonVariant = \"default\" | \"success\" | \"danger\" | \"text\";\n\nexport interface IconButtonStyleProps {\n  variant?: IconButtonVariant;\n  disabled?: boolean;\n  outlined?: boolean;\n  filled?: boolean;\n  small?: boolean;\n}\n\nconst getColorsByVariant = (\n  variant?: IconButtonVariant,\n  disabled?: boolean\n) => {\n  if (disabled)\n    return [\"var(--neutral-400)\", \"var(--neutral-400)\", \"var(--neutral)\"];\n\n  switch (variant) {\n    case \"text\":\n      return [\"var(--text)\", \"var(--text-title)\", \"var(--neutral)\"];\n    case \"success\":\n      return [\n        \"var(--green-light-600)\",\n        \"var(--green-light-800)\",\n        \"var(--green-light-100)\",\n      ];\n    case \"danger\":\n      return [\n        \"var(--red-light-600)\",\n        \"var(--red-light-800)\",\n        \"var(--red-light-100)\",\n      ];\n    default:\n      return [\"var(--blue-dark-600)\", \"var(--blue-dark-800)\", \"var(--neutral)\"];\n  }\n};\n\nexport const Container = styled.button.attrs({\n  type: \"button\",\n})<IconButtonStyleProps>`\n  outline: transparent;\n  border: initial;\n  width: ${({ small }) => (small ? \"3.2rem\" : \"4rem\")};\n  height: ${({ small }) => (small ? \"3.2rem\" : \"4rem\")};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 0.4rem;\n\n  &:focus {\n    outline: 0.2rem solid var(--gray);\n  }\n\n  ${({ variant, disabled, outlined, filled }) => {\n    const [textColor, textHover, bg] = getColorsByVariant(variant, disabled);\n\n    if (filled)\n      return css`\n        background-color: ${textColor};\n        color: ${bg};\n\n        &:hover {\n          background-color: ${textHover};\n          cursor: ${disabled ? \"no-drop\" : \"pointer\"};\n        }\n      `;\n\n    return css`\n      background-color: ${outlined ? bg : \"transparent\"};\n      color: ${textColor};\n\n      &:hover {\n        color: ${textHover};\n        cursor: ${disabled ? \"no-drop\" : \"pointer\"};\n      }\n    `;\n  }}\n`;\n","import styled from \"styled-components\";\n\nexport interface LoadingStyleProps {\n  centered?: boolean;\n}\n\nexport const LoadingContainer = styled.div<LoadingStyleProps>`\n  margin: ${({ centered = false }) => (centered ? \"0 auto\" : \"initial\")};\n  width: max-content;\n`;\n\nexport const LoadingContent = styled.div`\n  width: 1.5rem;\n  height: 1.5rem;\n  margin: 0.2rem;\n  border: 0.2rem solid currentColor;\n  border-radius: 50%;\n  border-top-color: transparent;\n  border-bottom-color: transparent;\n  animation: rotating 1s infinite;\n\n  @keyframes rotating {\n    to {\n      transform: rotate(1turn);\n    }\n  }\n`;\n"],"names":[],"sourceRoot":""}