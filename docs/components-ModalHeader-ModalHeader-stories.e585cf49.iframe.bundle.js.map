{"version":3,"file":"components-ModalHeader-ModalHeader-stories.e585cf49.iframe.bundle.js","mappings":";;;;;;AAqDA;;;;;AAQA;;;;AAMA;AAKA;AAGA;AACA;;AAIA;AAIA;;AAaA;AACA;AACA;AACA;AACA;AACA;AAjEA;AAmEA;;;AAGA;;;;AAIA;;;;AAMA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC5GA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA","sources":["webpack://personal-design/./src/components/Grid/styles.ts","webpack://personal-design/./src/components/Modal/styles.ts","webpack://personal-design/./src/components/ModalMain/styles.ts"],"sourcesContent":["import styled, { css } from \"styled-components\";\n\ntype GridColumnVariant = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n\nexport type GridItemVariant = \"base\" | \"auto\" | true | GridColumnVariant;\n\nexport interface GridStyleProps {\n  container?: boolean;\n  spacing?: number;\n  direction?: \"column-reverse\" | \"column\" | \"row-reverse\" | \"row\";\n  justifyContent?:\n    | \"flex-start\"\n    | \"center\"\n    | \"flex-end\"\n    | \"space-between\"\n    | \"space-around\"\n    | \"space-evenly\";\n  alignItems?: \"flex-start\" | \"center\" | \"flex-end\" | \"stretch\" | \"baseline\";\n  wrap?: \"nowrap\" | \"wrap-reverse\" | \"wrap\";\n  position?:\n    | \"absolute\"\n    | \"fixed\"\n    | \"relative\"\n    | \"static\"\n    | \"sticky\"\n    | \"initial\";\n  fullHeight?: boolean;\n  item?: boolean;\n  xl?: GridItemVariant;\n  lg?: GridItemVariant;\n  md?: GridItemVariant;\n  sm?: GridItemVariant;\n  xs?: GridItemVariant;\n  overflowX?: \"auto\" | \"hidden\" | \"scroll\" | \"visible\";\n  overflowY?: \"auto\" | \"hidden\" | \"scroll\" | \"visible\";\n}\n\nconst wrapResolver = (wrap?: string, direction?: string) => {\n  if (wrap) return wrap;\n  else if (direction === \"column\" || direction === \"column-reverse\")\n    return \"nowrap\";\n  else return \"wrap\";\n};\n\nconst gridSizeResolver = (value: GridItemVariant) => {\n  switch (value) {\n    case \"base\":\n      return css`\n        flex: 0 0 auto;\n        -webkit-box-flex: 0;\n        max-width: none;\n        width: auto;\n      `;\n    case \"auto\":\n    case true:\n      return css`\n        flex-basis: 0rem;\n        -webkit-box-flex: 1;\n        flex-grow: 1;\n        max-width: 100%;\n      `;\n    default:\n      const percent = `${(100 / 12) * value}%`;\n      return css`\n        flex-basis: initial;\n        -webkit-box-flex: 0;\n        flex-grow: 0;\n        width: ${percent};\n      `;\n  }\n};\n\nconst mediaResolver = (value: GridItemVariant, media?: string) => {\n  if (media)\n    return css`\n      @media (min-width: ${media}) {\n        ${gridSizeResolver(value)}\n      }\n    `;\n\n  return gridSizeResolver(value);\n};\n\nexport const Container = styled.div<GridStyleProps>`\n  ${({\n    container,\n    spacing = 0,\n    direction,\n    justifyContent,\n    alignItems,\n    wrap,\n    position = \"initial\",\n    fullHeight,\n  }) =>\n    container &&\n    css`\n      display: flex;\n      width: ${spacing ? `calc(100% + ${spacing}rem)` : \"100%\"};\n      height: ${fullHeight ? `calc(100% + ${spacing}rem)` : \"initial\"};\n      margin: ${spacing ? `-${spacing / 2}rem` : \"initial\"};\n      flex-direction: ${direction || \"row\"};\n      justify-content: ${justifyContent || \"flex-start\"};\n      align-items: ${alignItems || \"flex-start\"};\n      flex-wrap: ${wrapResolver(wrap, direction)};\n      position: ${position};\n\n      & > div {\n        padding: ${spacing ? `${spacing / 2}rem` : \"initial\"};\n      }\n    `}\n\n  ${({ item, xs, sm, md, lg, xl, overflowX, overflowY }) =>\n    item &&\n    css`\n      box-sizing: border-box;\n      flex-grow: initial;\n\n      overflow-x: ${overflowX};\n      overflow-y: ${overflowY};\n\n      ${xs && mediaResolver(xs)}\n      ${sm && mediaResolver(sm, \"600px\")}\n      ${md && mediaResolver(md, \"900px\")}\n      ${lg && mediaResolver(lg, \"1200px\")}\n      ${xl && mediaResolver(xl, \"1500px\")}\n    `}\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.35);\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  padding: 10vh;\n  z-index: 15;\n`;\n\nexport const ModalContent = styled.div`\n  width: 40rem;\n  background-color: var(--white);\n  border-radius: 0.4rem;\n  animation: modal-fade-in 0.5s;\n\n  &:has(footer) main {\n    max-height: calc(80vh - 14.6rem);\n  }\n\n  @keyframes modal-fade-in {\n    from {\n      transform: translateY(-1rem);\n    }\n\n    to {\n      transform: translateY(0);\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nexport interface ModalMainStyleProps {\n  noOverflow?: boolean;\n}\n\nexport const Container = styled.main<ModalMainStyleProps>`\n  position: relative;\n  width: 100%;\n  max-height: calc(80vh - 7.3rem);\n  transition: height ease-in-out 0.2s;\n  padding: 1.6rem;\n  overflow-y: ${({ noOverflow }) => (noOverflow ? \"initial\" : \"auto\")};\n`;\n"],"names":[],"sourceRoot":""}