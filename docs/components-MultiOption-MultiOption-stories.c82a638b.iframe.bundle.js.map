{"version":3,"file":"components-MultiOption-MultiOption-stories.c82a638b.iframe.bundle.js","mappings":";;;;;;;;;AA6BA;;AAMA;AACA;AAGA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AAGA;;;;;;;;;;;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;;;;;;;;;;;;;;;AAiBA;;;AAKA;;;AAOA;;;;;;;;;;;;;;;;;;;;;AAuBA;;;AAKA;;;;AAOA;;;;;;;AASA","sources":["webpack://personal-design/./src/components/Chip/styles.ts","webpack://personal-design/./src/components/MultiSelect/styles.ts"],"sourcesContent":["import styled, { css } from \"styled-components\";\n\nexport type ChipVariant = \"default\" | \"success\" | \"danger\";\n\nexport interface ChipStyleProps {\n  variant?: ChipVariant;\n  bordered?: boolean;\n}\n\nconst getColorsByVariant = (variant: ChipVariant) => {\n  switch (variant) {\n    case \"success\":\n      return [\"var(--green-light-600)\", \"var(--green-light-100)\"];\n    case \"danger\":\n      return [\"var(--red-light-600)\", \"var(--red-light-100)\"];\n    default:\n      return [\"var(--blue-dark-800)\", \"var(--neutral)\"];\n  }\n};\n\nexport const Container = styled.div<ChipStyleProps>`\n  width: max-content;\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n  border-radius: 0.4rem;\n  font-size: 1.4rem;\n  line-height: 1.8rem;\n\n  ${({ variant = \"default\", bordered }) => {\n    const [color, bg] = getColorsByVariant(variant);\n\n    if (bordered)\n      return css`\n        padding: 0.5rem 1.5rem;\n        border: 0.1rem solid ${color};\n        color: ${color};\n      `;\n\n    return css`\n      padding: 0.6rem 1.6rem;\n      background-color: ${bg};\n      color: ${color};\n    `;\n  }}\n\n  > span {\n    font-size: 1.8rem;\n    line-height: 1.8rem;\n    font-weight: 900;\n    cursor: pointer;\n  }\n`;\n","import { ArrowDownIcon } from \"assets\";\nimport styled, { css } from \"styled-components\";\n\nexport interface MultiSelectStyleProps {\n  direction?: \"up\" | \"down\";\n  fullWidth?: boolean;\n  open?: boolean;\n  disabled?: boolean;\n}\n\nexport const Container = styled.div<Pick<MultiSelectStyleProps, \"fullWidth\">>`\n  width: ${({ fullWidth }) => (fullWidth ? \"100%\" : \"max-content\")};\n`;\n\nexport const MultiSelectContent = styled.button.attrs({\n  type: \"button\",\n})<Pick<MultiSelectStyleProps, \"disabled\">>`\n  position: relative;\n  width: 100%;\n  height: 4rem;\n  border-radius: 0.4rem;\n  border: 0.1rem solid var(--neutral-400);\n  padding: 1rem 1.2rem;\n  font-size: 1.4rem;\n  font-weight: 400;\n  text-align: start;\n  color: var(--text);\n  background: ${({ disabled }) =>\n    disabled ? \"var(--neutral)\" : \"var(--white)\"};\n  outline: transparent;\n\n  display: flex;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n  align-items: center;\n  gap: 1.2rem;\n\n  cursor: pointer;\n\n  &:focus {\n    outline: 0.2rem solid var(--gray);\n  }\n\n  span {\n    color: var(--neutral-400);\n  }\n\n  p {\n    flex: 1;\n\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    white-space: normal;\n    -webkit-line-clamp: 1;\n    word-break: break-all;\n  }\n`;\n\nexport const InputFilter = styled.input`\n  position: absolute;\n  width: calc(100% - 2rem);\n  height: 4rem;\n  border-radius: 0.4rem;\n  padding: 1rem 1.2rem;\n  left: 0;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  cursor: pointer;\n\n  ::placeholder {\n    color: var(--neutral-400);\n  }\n`;\n\nexport const ArrowIcon = styled(ArrowDownIcon)<\n  Pick<MultiSelectStyleProps, \"open\">\n>`\n  transition: 250ms ease-in-out;\n\n  ${({ open }) =>\n    open &&\n    css`\n      transform: rotate(180deg);\n    `}\n`;\n\nexport const OptionsContent = styled.dialog<\n  Pick<MultiSelectStyleProps, \"direction\">\n>`\n  width: 100%;\n  max-height: 17.4rem;\n  overflow: hidden auto;\n  position: absolute;\n  left: 0;\n  right: 0;\n  border-radius: 0.4rem;\n  background-color: var(--white);\n  border: 0.1rem solid var(--neutral-400);\n  padding: 0.8rem;\n  z-index: 5;\n\n  &[open] {\n    color: var(--text);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 0.4rem;\n  }\n\n  ${({ direction = \"down\" }) =>\n    direction === \"down\"\n      ? css`\n          bottom: -0.4rem;\n          transform: translateY(100%);\n        `\n      : css`\n          top: -0.4rem;\n          transform: translateY(-100%);\n        `}\n`;\n\nexport const ChipsContent = styled.div`\n  margin-top: 0.8rem;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  gap: 0.8rem;\n`;\n\nexport const NoOptionContent = styled.div`\n  padding: 2rem;\n`;\n"],"names":[],"sourceRoot":""}