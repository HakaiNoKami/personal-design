{"version":3,"file":"components-Td-Td-stories.ff2ca8bb.iframe.bundle.js","mappings":";;;;;;;;;;AAWA;;;;;;;ACEA;;AAIA;;;;;AAKA;AACA;AACA;AACA;;;;;;AAMA;;;;;;;;;;;;;;;;;;;;;AAqBA;;;AAIA;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;ACjEA;AACA;;;AAGA;;;;ACLA;;;;;;;;;;AAUA","sources":["webpack://personal-design/./src/components/THead/styles.ts","webpack://personal-design/./src/components/Table/styles.ts","webpack://personal-design/./src/components/Td/styles.ts","webpack://personal-design/./src/components/Th/styles.ts"],"sourcesContent":["import type { HTMLAttributes } from \"react\";\nimport styled from \"styled-components\";\n\nexport interface THeadStyleProps\n  extends HTMLAttributes<HTMLTableSectionElement> {\n  recoil?: number;\n}\n\nexport const Container = styled.thead<THeadStyleProps>`\n  position: -webkit-sticky;\n  position: sticky;\n  top: ${({ recoil = 0 }) => `-${recoil}rem`};\n\n  th:not(:first-child) {\n    border-left: 0.1rem solid var(--gray);\n  }\n`;\n","import type { TableHTMLAttributes } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nexport interface TableStyleProps extends TableHTMLAttributes<HTMLTableElement> {\n  fullWidth?: boolean;\n  spacing?: number;\n  overflow?: boolean;\n  fixed?: boolean;\n  hasFilter?: boolean;\n}\n\nexport const OverflowTable = styled.div<Pick<TableStyleProps, \"fullWidth\">>`\n  display: block;\n  width: ${({ fullWidth }) => (fullWidth ? \"100%\" : \"auto\")};\n  overflow-x: auto;\n`;\n\nexport const Container = styled.table<TableStyleProps>`\n  border: 0.1rem solid var(--gray);\n  border-top: none;\n  position: relative;\n\n  ${({ spacing = 0.8, overflow, fullWidth, fixed, hasFilter }) => css`\n    width: ${fullWidth ? \"100%\" : \"initial\"};\n    min-width: ${overflow ? \"100%\" : \"initial\"};\n    table-layout: ${fixed ? \"fixed\" : \"auto\"};\n    border-spacing: 0;\n\n    th,\n    td {\n      height: 4rem;\n      padding: ${spacing}rem;\n      border-collapse: collapse;\n      border-bottom: 0.1rem solid var(--gray);\n    }\n\n    thead tr th {\n      background-color: var(--neutral);\n    }\n\n    tbody tr td:first-of-type {\n      border-left: none;\n    }\n\n    tbody tr:last-of-type td {\n      border-bottom: none;\n    }\n\n    tfoot td {\n      border-bottom: none;\n    }\n\n    ${hasFilter\n      ? css`\n          border-bottom-left-radius: 0.4rem;\n          border-bottom-right-radius: 0.4rem;\n        `\n      : css`\n          border-radius: 0.4rem;\n\n          thead tr {\n            th {\n              border-top: 0.1rem solid var(--gray);\n            }\n\n            &:first-of-type th:first-of-type {\n              border-top-left-radius: 0.4rem;\n            }\n\n            &:first-of-type th:last-of-type {\n              border-top-right-radius: 0.4rem;\n            }\n          }\n        `}\n\n    ${overflow &&\n    css`\n      th {\n        white-space: pre;\n      }\n    `}\n  `}\n`;\n","import type { TdHTMLAttributes } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nexport interface TdStyleProps\n  extends TdHTMLAttributes<HTMLTableDataCellElement> {\n  width?: string;\n  hasDivisor?: boolean;\n}\n\nexport const Container = styled.td<TdStyleProps>`\n  width: ${({ width }) => width ?? \"auto\"};\n  max-width: ${({ width }) => width ?? \"auto\"};\n  vertical-align: middle;\n\n  ${({ hasDivisor }) =>\n    hasDivisor &&\n    css`\n      border-left: 0.1rem solid var(--gray);\n    `}\n`;\n","import type { ThHTMLAttributes } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nexport interface ThStyleProps\n  extends ThHTMLAttributes<HTMLTableHeaderCellElement> {\n  width?: string;\n}\n\nexport const Container = styled.th<ThStyleProps>`\n  width: ${({ width }) => width ?? \"auto\"};\n  text-align: start;\n  font-weight: 700;\n  line-height: 2rem;\n  vertical-align: middle;\n\n  &:hover {\n    color: var(--text-title);\n  }\n\n  ${({ onClick }) =>\n    !!onClick &&\n    css`\n      cursor: pointer;\n\n      &::after {\n        content: \"â‡µ\";\n        margin-left: 0.5rem;\n        color: inherit;\n      }\n    `}\n`;\n"],"names":[],"sourceRoot":""}