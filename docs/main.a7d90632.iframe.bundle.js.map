{"version":3,"file":"main.a7d90632.iframe.bundle.js","mappings":"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","sources":["webpack://personal-design/./src/global.styles.ts","webpack://personal-design/./src/components/Alert/styles.ts","webpack://personal-design/./src/components/Avatar/styles.ts","webpack://personal-design/./src/components/Box/styles.ts","webpack://personal-design/./src/components/Button/styles.ts","webpack://personal-design/./src/components/Card/styles.ts","webpack://personal-design/./src/components/CardInfo/styles.ts","webpack://personal-design/./src/components/Checkbox/styles.ts","webpack://personal-design/./src/components/Chip/styles.ts","webpack://personal-design/./src/components/Collapse/styles.ts","webpack://personal-design/./src/components/Dialog/styles.ts","webpack://personal-design/./src/components/Divisor/styles.ts","webpack://personal-design/./src/components/Dropdown/styles.ts","webpack://personal-design/./src/components/Form/styles.ts","webpack://personal-design/./src/components/FormGroup/styles.ts","webpack://personal-design/./src/components/Grid/styles.ts","webpack://personal-design/./src/components/IconButton/styles.ts","webpack://personal-design/./src/components/Input/styles.ts","webpack://personal-design/./src/components/InputFile/styles.ts","webpack://personal-design/./src/components/Loading/styles.ts","webpack://personal-design/./src/components/MediaText/styles.ts","webpack://personal-design/./src/components/Modal/styles.ts","webpack://personal-design/./src/components/ModalMain/styles.ts","webpack://personal-design/./src/components/MultiSelect/styles.ts","webpack://personal-design/./src/components/Nav/styles.ts","webpack://personal-design/./src/components/Option/styles.ts","webpack://personal-design/./src/components/OverflowText/styles.ts","webpack://personal-design/./src/components/PageHeader/styles.ts","webpack://personal-design/./src/components/Pagination/styles.ts","webpack://personal-design/./src/components/Radio/styles.ts","webpack://personal-design/./src/components/Range/styles.ts","webpack://personal-design/./src/components/Select/styles.ts","webpack://personal-design/./src/components/Stepper/styles.ts","webpack://personal-design/./src/components/TFooter/styles.ts","webpack://personal-design/./src/components/THead/styles.ts","webpack://personal-design/./src/components/Table/styles.ts","webpack://personal-design/./src/components/Tag/styles.ts","webpack://personal-design/./src/components/Td/styles.ts","webpack://personal-design/./src/components/Textarea/styles.ts","webpack://personal-design/./src/components/Th/styles.ts","webpack://personal-design/./src/components/Toast/styles.ts","webpack://personal-design/./src/components/Toggle/styles.ts","webpack://personal-design/./src/components/ToggleButton/styles.ts","webpack://personal-design/./src/components/ToggleGroup/styles.ts","webpack://personal-design/./src/components/Tooltip/styles.ts"],"sourcesContent":["import { createGlobalStyle, css } from \"styled-components\";\n\nconst BaseGlobalStyle = css`\n  :root {\n    font-size: 62.5%;\n  }\n\n  #modal:has(div) ~ #root {\n    overflow: hidden;\n  }\n\n  * {\n    margin: 0;\n    padding: 0;\n    vertical-align: baseline;\n    box-sizing: border-box;\n    font-family: \"Archivo\", -apple-system, BlinkMacSystemFont, sans-serif;\n\n    ::-webkit-scrollbar-track {\n      background: transparent;\n    }\n\n    ::-webkit-scrollbar {\n      width: 1.2rem;\n      height: 1.2rem;\n    }\n\n    ::-webkit-scrollbar-thumb {\n      border-radius: 1rem;\n      border: 0.3rem solid transparent;\n      background-color: transparent;\n      background-clip: content-box;\n    }\n\n    &:hover {\n      ::-webkit-scrollbar-thumb {\n        background-color: var(--text);\n      }\n    }\n  }\n\n  body {\n    color: var(--text);\n    background: var(--neutral);\n  }\n\n  #root {\n    width: 100vw;\n    height: 100vh;\n    overflow: auto;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  strong {\n    font-weight: 600;\n  }\n\n  p,\n  span,\n  a,\n  th,\n  td,\n  button {\n    font-size: 1.4rem;\n    line-height: 2rem;\n  }\n\n  small {\n    font-size: 1rem;\n    line-height: 1.2rem;\n    letter-spacing: 0.15em;\n    font-weight: 600;\n    color: var(--neutral-400);\n\n    &.uppercase {\n      text-transform: uppercase;\n    }\n  }\n\n  svg {\n    display: block;\n  }\n\n  h3 {\n    font-size: 2rem;\n    line-height: 3rem;\n    color: var(--text-title);\n  }\n\n  a {\n    &:focus-visible {\n      outline: 0.2rem auto var(--gray);\n    }\n  }\n\n  .text-center {\n    text-align: center !important;\n\n    svg {\n      display: inline-block;\n    }\n  }\n\n  .nowrap {\n    white-space: nowrap;\n  }\n\n  @media print {\n    html,\n    body {\n      height: initial !important;\n      overflow: initial !important;\n      print-color-adjust: exact;\n      -webkit-print-color-adjust: exact;\n    }\n\n    @page {\n      size: auto;\n      margin: 15mm 10mm;\n    }\n  }\n`;\n\nexport const LightGlobalStyles = createGlobalStyle`\n  :root {\n    --white: #FFFFFF; \n    --balck: #000000; \n    --gray: #DADCE3;\n    --blue: #4d70ff;\n    --red: #F9675B;\n    --green: #38B878;\n    --yellow: #F9D65B;\n    --cyan: #1c9ab5;\n    --orange: #F9A75B;\n    \n    --neutral: #F3F5F9;\n    --neutral-400: #979AA5;\n    --neutral-600: #5A5D68;\n\n    --blue-dark-500:#3366FF;\n    --blue-dark-600: #254EDB;\n    --blue-dark-800: #102693;\n\n    --blue-light-200: #ADC8FF;\n    --blue-light-400: #D6E4FF;\n    --blue-light-500: #3366FF;\n\n    --red-light-100: #FAE0D2;\n    --red-light-600:  #871821;\n    --red-light-800: #5B0A1F;\n    \n    --green-light-100: #E3F8CC;\n    --green-light-200: #B7FFAD;\n    --green-light-600: #19660A;\n    --green-light-800:  #054504;\n\n    --yellow-light-100: #FBEECA;\n    --yellow-light-600: #9B5203;\n\n    --cyan-light-100: #C7F9ED;\n    --cyan-light-600: #006074;\n\n    --whatsapp-green: #25D366;\n    --whatsapp-green-hover: #13ab4c;\n\n    --background: #F0F2F5;\n    --text-title: #35373F;\n    --text: #5A5D68;\n    --box-shadow: #18274b14;\n  }\n\n  ${BaseGlobalStyle}\n`;\n\nexport const DarkGlobalStyles = createGlobalStyle`\n  :root {\n    --white: #000000; \n    --balck: #FFFFFF; \n    --gray: #6f7073;\n    --blue: #4d70ff;\n    --red: #F9675B;\n    --green: #38B878;\n    --yellow: #F9D65B;\n    --cyan: #1c9ab5;\n    --orange: #F9A75B;\n    \n    --neutral: #5A5D68;\n    --neutral-400: #979AA5;\n    --neutral-600: #F3F5F9;\n\n    --blue-dark-500:#3366FF;\n    --blue-dark-600: #254EDB;\n    --blue-dark-800: #102693;\n\n    --blue-light-200: #ADC8FF;\n    --blue-light-400: #D6E4FF;\n    --blue-light-500: #3366FF;\n\n    --red-light-100: #FAE0D2;\n    --red-light-600:  #871821;\n    --red-light-800: #5B0A1F;\n    \n    --green-light-100: #E3F8CC;\n    --green-light-200: #B7FFAD;\n    --green-light-600: #19660A;\n    --green-light-800:  #054504;\n\n    --yellow-light-100: #FBEECA;\n    --yellow-light-600: #9B5203;\n\n    --cyan-light-100: #C7F9ED;\n    --cyan-light-600: #006074;\n\n    --whatsapp-green: #25D366;\n    --whatsapp-green-hover: #13ab4c;\n\n    --background: #35373F;\n    --text-title: #F0F2F5;\n    --text: #C6C8CC;\n    --box-shadow: #7987A814;\n  }\n\n  ${BaseGlobalStyle}\n`;\n","import styled, { css } from \"styled-components\";\n\nexport type AlertVariant = \"success\" | \"error\" | \"warning\" | \"info\";\n\nexport interface AlertStyleProps {\n  variant?: AlertVariant;\n  fullwidth?: boolean;\n  noDescription?: boolean;\n}\n\nconst getColorsByType = (variant: AlertVariant) => {\n  switch (variant) {\n    case \"error\":\n      return [\"var(--red-light-600)\", \"var(--red-light-100)\"];\n    case \"warning\":\n      return [\"var(--yellow-light-600)\", \"var(--yellow-light-100)\"];\n    case \"info\":\n      return [\"var(--cyan-light-600)\", \"var(--cyan-light-100)\"];\n    default:\n      return [\"var(--green-light-600)\", \"var(--green-light-100)\"];\n  }\n};\n\nexport const Container = styled.div<Omit<AlertStyleProps, \"noDescription\">>`\n  width: ${({ fullwidth }) => (fullwidth ? \"100%\" : \"initial\")};\n  min-width: 30rem;\n  padding: 1.6rem;\n  display: flex;\n  justify-content: start;\n  align-items: flex-start;\n  gap: 1.6rem;\n  border-radius: 0.4rem;\n\n  ${({ variant = \"success\" }) => {\n    const [color, bg] = getColorsByType(variant);\n\n    return css`\n      background-color: ${bg};\n      border: 0.1rem solid ${color};\n      color: ${color};\n    `;\n  }}\n`;\n\nexport const IconContent = styled.div`\n  width: 2.4rem;\n  height: 2.4rem;\n`;\n\nexport const InfoContent = styled.div<Pick<AlertStyleProps, \"noDescription\">>`\n  flex: 1;\n  font-size: 1.4rem;\n  line-height: 2rem;\n\n  > p:first-child {\n    line-height: 2.4rem;\n  }\n\n  ${({ noDescription }) =>\n    noDescription &&\n    css`\n      > p:first-child b {\n        font-weight: normal;\n      }\n    `}\n`;\n","import styled, { css } from \"styled-components\";\n\nexport interface AvatarStyleProps {\n  small?: boolean;\n  squared?: boolean;\n}\n\nexport const Container = styled.div<AvatarStyleProps>`\n  max-width: 100%;\n  width: ${({ small }) => (small ? \"2.4rem\" : \"5.6rem\")};\n  max-height: 100%;\n  height: ${({ small }) => (small ? \"2.4rem\" : \"5.6rem\")};\n  border: none;\n\n  font-weight: 500;\n  text-transform: uppercase;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  user-select: none;\n  position: relative;\n  overflow: hidden;\n\n  ${({ squared }) =>\n    squared\n      ? css`\n          border-radius: 0.4rem;\n          background-color: var(--neutral);\n          color: var(--blue-dark-800);\n        `\n      : css`\n          border-radius: 50%;\n          background-color: var(--primary-100-light);\n          color: var(--primary-800-light);\n        `}\n`;\n\nexport const AvatarImage = styled.img`\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  object-fit: cover;\n  color: transparent;\n`;\n","import styled, { css } from \"styled-components\";\n\nexport type BoxVariant = \"default\" | \"neutral\" | \"gray\";\n\nexport interface BoxStyleProps {\n  padding?: number;\n  radius?: number;\n  fullHeight?: boolean;\n  variant?: BoxVariant;\n}\n\nexport const Container = styled.div<BoxStyleProps>`\n  width: 100%;\n  height: ${({ fullHeight }) => (fullHeight ? \"100%\" : \"initial\")};\n  padding: ${({ padding = 1.6 }) => `${padding}rem`};\n  border-radius: ${({ radius = 0 }) => `${radius}rem`};\n\n  ${({ variant }) => {\n    switch (variant) {\n      case \"neutral\":\n        return css`\n          background-color: var(--neutral);\n        `;\n      case \"gray\":\n        return css`\n          background-color: var(--gray);\n        `;\n      default:\n        return css`\n          background-color: var(--white);\n        `;\n    }\n  }}\n`;\n","import type { ButtonHTMLAttributes } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nexport type ButtonVariant = \"default\" | \"success\" | \"danger\" | \"link\";\n\nexport interface ButtonStyleProps\n  extends ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: ButtonVariant;\n  fullWidth?: boolean;\n  minWidth?: boolean;\n  small?: boolean;\n  bordered?: boolean;\n  outlined?: boolean;\n  disabled?: boolean;\n}\n\nconst getColorsByVariant = (variant?: ButtonVariant, disabled?: boolean) => {\n  if (disabled)\n    return [\n      \"var(--neutral)\",\n      \"var(--neutral-400)\",\n      \"var(--neutral-400)\",\n      \"var(--neutral)\",\n    ];\n\n  switch (variant) {\n    case \"success\":\n      return [\n        \"var(--white)\",\n        \"var(--green-light-600)\",\n        \"var(--green-light-800)\",\n        \"var(--green-light-100)\",\n      ];\n    case \"danger\":\n      return [\n        \"var(--white)\",\n        \"var(--red-light-600)\",\n        \"var(--red-light-800)\",\n        \"var(--red-light-100)\",\n      ];\n    case \"link\":\n      return [\n        \"var(--blue-dark-600)\",\n        \"transparent\",\n        \"transparent\",\n        \"transparent\",\n      ];\n    default:\n      return [\n        \"var(--white)\",\n        \"var(--blue-dark-600)\",\n        \"var(--blue-dark-800)\",\n        \"var(--neutral)\",\n      ];\n  }\n};\n\nexport const Container = styled.button<ButtonStyleProps>`\n  width: ${({ fullWidth }) => (fullWidth ? \"100%\" : \"max-content\")};\n  min-width: ${({ minWidth }) => (minWidth ? `12rem` : \"inital\")};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n  border-radius: 0.4rem;\n  outline: transparent;\n  background-color: transparent;\n  border: 0.1rem solid transparent;\n  padding: ${({ small }) => (small ? \"0.5rem 1.6rem\" : \"0.9rem 1.6rem\")};\n\n  &:focus {\n    outline: 0.2rem solid var(--gray);\n  }\n\n  > code:empty {\n    display: none;\n  }\n\n  ${({ variant, bordered, outlined, disabled }) => {\n    const [textColor, bg, bgHover, bgOutline] = getColorsByVariant(\n      variant,\n      disabled\n    );\n\n    if (variant === \"link\")\n      return css`\n        color: ${textColor};\n\n        &:hover {\n          text-decoration: underline;\n        }\n      `;\n\n    if (bordered) {\n      return css`\n        color: ${bg};\n        border-color: ${bg};\n\n        &:hover {\n          color: ${bgHover};\n          border-color: ${bgHover};\n          cursor: ${disabled ? \"no-drop\" : \"pointer\"};\n        }\n      `;\n    }\n\n    if (outlined) {\n      return css`\n        color: ${bg};\n        background-color: ${bgOutline};\n\n        &:hover {\n          color: ${bgHover};\n          cursor: ${disabled ? \"no-drop\" : \"pointer\"};\n        }\n      `;\n    }\n\n    return css`\n      background: ${bg};\n      color: ${textColor};\n\n      &:hover {\n        background: ${bgHover};\n        cursor: ${disabled ? \"no-drop\" : \"pointer\"};\n      }\n    `;\n  }}\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  max-width: 100%;\n  min-width: 37.6rem;\n  background-color: var(--white);\n  box-shadow: 0 0.2rem 0.4rem var(--box-shadow),\n    0 0.4rem 0.4rem var(--box-shadow);\n\n  border-radius: 0.4rem;\n\n  header {\n    padding: 2.4rem;\n    border-bottom: 0.1rem solid var(--gray);\n\n    h2 {\n      line-height: 2.4rem;\n      color: var(--text-title);\n      font-weight: bold;\n      font-size: 2.4rem;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 2.4rem;\n\n  main {\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n    text-align: justify;\n    flex-direction: column;\n    gap: 1.4rem;\n  }\n`;\n\nexport const Description = styled.p`\n  line-height: 2rem;\n  font-size: 1.4rem;\n  margin-bottom: 1.6rem;\n  color: var(--text);\n  text-shadow: 0 0 var(--text-title);\n`;\n","import styled from \"styled-components\";\n\nexport interface CardInfoStyleProps {\n  fullWidth?: boolean;\n  fullWHeight?: boolean;\n  onClick?: () => void;\n}\n\nexport const Container = styled.div<CardInfoStyleProps>`\n  min-width: 22.6rem;\n  height: ${({ fullWHeight }) => (fullWHeight ? \"100%\" : \"auto\")};\n  width: ${({ fullWidth }) => (fullWidth ? \"100%\" : \"auto\")};\n  padding: 1.6rem;\n  border-radius: 0.4rem;\n  border: 1px solid var(--gray);\n  display: flex;\n  flex-direction: column;\n  gap: 1.6rem;\n\n  cursor: ${({ onClick }) => (onClick ? \"pointer\" : \"inintial\")};\n`;\n\nexport const IconContainer = styled.div`\n  width: 4rem;\n  height: 4rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 0.5rem;\n  background-color: var(--blue-dark-600);\n  color: var(--white);\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n`;\n\nexport const Main = styled.main`\n  min-height: 4.4rem;\n  text-align: left;\n\n  p {\n    font-weight: bold;\n    color: var(--text-title);\n    font-size: 1.6rem;\n    line-height: 2.4rem;\n  }\n\n  span {\n    font-size: 1.4rem;\n    line-height: 2rem;\n  }\n`;\n\nexport const Footer = styled.footer`\n  width: 100%;\n  margin-top: 2rem;\n`;\n","import styled, { css } from \"styled-components\";\n\nexport interface CheckboxStyleProps {\n  noWrap?: boolean;\n  maxContent?: boolean;\n}\n\nexport const Container = styled.label<CheckboxStyleProps>`\n  width: ${({ maxContent }) => (maxContent ? \"max-content\" : \"100%\")};\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  cursor: pointer;\n\n  > span {\n    flex: 1;\n    vertical-align: middle;\n    font-size: 1.4rem;\n    line-height: 1.6rem;\n    margin-left: 0.8rem;\n\n    ${({ noWrap }) =>\n      noWrap &&\n      css`\n        display: -webkit-box;\n        -webkit-line-clamp: 1;\n        -webkit-box-orient: vertical;\n        overflow: hidden;\n        white-space: normal;\n      `}\n  }\n`;\n\nexport const Input = styled.input`\n  width: 1.6rem;\n  height: 1.6rem;\n  border: 1px solid var(--neutral-400);\n  border-radius: 0.4rem;\n\n  &:focus {\n    outline: 0.2rem solid var(--gray);\n  }\n`;\n","import styled, { css } from \"styled-components\";\n\nexport type ChipVariant = \"default\" | \"success\" | \"danger\";\n\nexport interface ChipStyleProps {\n  variant?: ChipVariant;\n  bordered?: boolean;\n}\n\nconst getColorsByVariant = (variant: ChipVariant) => {\n  switch (variant) {\n    case \"success\":\n      return [\"var(--green-light-600)\", \"var(--green-light-100)\"];\n    case \"danger\":\n      return [\"var(--red-light-600)\", \"var(--red-light-100)\"];\n    default:\n      return [\"var(--blue-dark-800)\", \"var(--neutral)\"];\n  }\n};\n\nexport const Container = styled.div<ChipStyleProps>`\n  width: max-content;\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n  border-radius: 0.4rem;\n  font-size: 1.4rem;\n  line-height: 1.8rem;\n\n  ${({ variant = \"default\", bordered }) => {\n    const [color, bg] = getColorsByVariant(variant);\n\n    if (bordered)\n      return css`\n        padding: 0.5rem 1.5rem;\n        border: 0.1rem solid ${color};\n        color: ${color};\n      `;\n\n    return css`\n      padding: 0.6rem 1.6rem;\n      background-color: ${bg};\n      color: ${color};\n    `;\n  }}\n\n  > span {\n    font-size: 1.8rem;\n    line-height: 1.8rem;\n    font-weight: 900;\n    cursor: pointer;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport interface CollapseStyleProps {\n  isOpen: boolean;\n}\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 1.6rem;\n`;\n\nexport const SummaryContent = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  gap: 1.6rem;\n  cursor: pointer;\n`;\n\nexport const TextContent = styled.div`\n  flex: 1;\n`;\n\nexport const IconContent = styled.div<CollapseStyleProps>`\n  padding: 1.05rem 1.3rem;\n  background-color: var(--neutral);\n  border-radius: 0.4rem;\n\n  svg {\n    transition: ease-in-out 0.2s;\n    transform: ${({ isOpen }) => (isOpen ? \"rotate(-90deg)\" : \"initial\")};\n  }\n`;\n","import { ModalFooter } from \"components/ModalFooter\";\nimport { ModalHeader } from \"components/ModalHeader\";\nimport { ModalMain } from \"components/ModalMain\";\nimport styled from \"styled-components\";\n\nexport const DialogModalHeader = styled(ModalHeader)`\n  border: initial;\n  width: 40rem;\n  align-items: flex-start;\n\n  > button {\n    height: 3rem;\n  }\n`;\n\nexport const DialogModalMain = styled(ModalMain)`\n  p {\n    text-align: justify;\n  }\n`;\n\nexport const DialogModalFooter = styled(ModalFooter)`\n  background-color: var(--white);\n`;\n","import styled, { css } from \"styled-components\";\n\nexport interface DivisorStyleProps {\n  recoil?: number;\n}\n\nexport const DivisorContent = styled.section<DivisorStyleProps>`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: 1.6rem;\n\n  ${({ recoil }) =>\n    recoil\n      ? css`\n          width: calc(100% + ${recoil * 2}rem);\n          margin: 0 -${recoil}rem;\n        `\n      : css`\n          width: 100%;\n          margin: initial;\n        `}\n`;\n\nexport const DivisorLine = styled.hr`\n  flex: 1;\n  border: none;\n  border-bottom: 0.1rem solid var(--gray);\n`;\n","import { ArrowDownIcon } from \"assets\";\nimport styled, { css } from \"styled-components\";\n\nexport interface DropdownStyleProps {\n  open?: boolean;\n  fullWidth?: boolean;\n  outlined?: boolean;\n  bordered?: boolean;\n  disabled?: boolean;\n  centralized?: boolean;\n  positionIcon?: \"start\" | \"end\";\n}\n\nexport const Container = styled.div<Pick<DropdownStyleProps, \"fullWidth\">>`\n  width: ${({ fullWidth }) => (fullWidth ? \"100%\" : \"max-content\")};\n  position: relative;\n`;\n\ninterface DropdownContentProps\n  extends Omit<DropdownStyleProps, \"open\" | \"centralized\" | \"positionIcon\"> {}\n\nexport const DropdownContent = styled.div<DropdownContentProps>`\n  width: 100%;\n  height: 4rem;\n  border-radius: 0.4rem;\n  padding: 0.9rem 1.6rem;\n  font-size: 1.4rem;\n  font-weight: 400;\n\n  background-color: transparent;\n  border: 0.1rem solid transparent;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 1rem;\n\n  ${({ disabled, bordered, outlined }) => {\n    const bg = \"var(--neutral)\";\n    const textColor = disabled ? \"var(--neutral-400)\" : \"var(--blue-dark-600)\";\n\n    if (bordered) {\n      return css`\n        color: ${textColor};\n        border-color: ${textColor};\n        cursor: ${disabled ? \"no-drop\" : \"pointer\"};\n      `;\n    }\n\n    if (outlined) {\n      return css`\n        color: ${textColor};\n        background-color: ${bg};\n        cursor: ${disabled ? \"no-drop\" : \"pointer\"};\n      `;\n    }\n\n    return css`\n      background-color: ${textColor};\n      color: var(--white);\n      cursor: pointer;\n    `;\n  }}\n`;\n\nexport const TextContent = styled.div<\n  Pick<DropdownStyleProps, \"centralized\" | \"positionIcon\">\n>`\n  flex: 1;\n  display: flex;\n  justify-content: ${({ centralized }) =>\n    centralized ? \"center\" : \"flex-start\"};\n  align-items: center;\n  flex-direction: ${({ positionIcon }) =>\n    positionIcon === \"end\" ? \"row-reverse\" : \"row\"};\n  gap: 1rem;\n`;\n\nexport const ArrowIcon = styled(ArrowDownIcon)<\n  Pick<DropdownStyleProps, \"open\">\n>`\n  transition: 250ms ease-in-out;\n\n  ${({ open }) =>\n    open &&\n    css`\n      transform: rotate(180deg);\n    `}\n`;\n\nexport const ItemsContent = styled.dialog`\n  width: max-content;\n  min-width: 100%;\n  max-height: 17.4rem;\n  overflow-y: auto;\n  position: absolute;\n  left: 0;\n  right: 0;\n  border-radius: 0.4rem;\n  background-color: var(--white);\n  border: 0.1rem solid var(--neutral-400);\n  padding: 0.8rem;\n  z-index: 5;\n\n  bottom: -0.4rem;\n  transform: translateY(100%);\n\n  &[open] {\n    color: var(--text);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n","import styled, { css } from \"styled-components\";\n\nexport interface FormStyleProps {\n  direction?: \"vertical\" | \"horizontal\";\n  spacing?: number;\n}\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: start;\n  align-items: flex-start;\n  flex-direction: column;\n  gap: 0.8rem;\n`;\n\nexport const TitleForm = styled.div`\n  font-size: 2rem;\n  line-height: 3rem;\n  letter-spacing: 0.75%;\n  color: var(--text-title);\n`;\n\nexport const FormContent = styled.form<FormStyleProps>`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  gap: ${({ spacing = 0 }) => `${spacing}rem`};\n\n  ${({ direction = \"vertical\" }) => {\n    switch (direction) {\n      case \"horizontal\":\n        return css`\n          justify-content: start;\n          align-items: flex-end;\n          flex-direction: row;\n        `;\n      default:\n        return css`\n          justify-content: start;\n          align-items: flex-start;\n          flex-direction: column;\n        `;\n    }\n  }}\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  position: relative;\n  display: flex;\n  justify-content: start;\n  align-items: flex-start;\n  flex-direction: column;\n  gap: 0.8rem;\n`;\n\nexport const LabelForm = styled.label`\n  font-weight: 600;\n  font-size: 1.4rem;\n  line-height: 1.6rem;\n\n  span {\n    font-weight: inherit;\n    font-size: inherit;\n    line-height: inherit;\n    color: var(--red);\n  }\n`;\n\nexport const ErrorForm = styled.p`\n  font-weight: 400;\n  font-size: 1.2rem;\n  line-height: 1.4rem;\n  color: var(--red);\n  position: absolute;\n  bottom: -1.4rem;\n`;\n","import styled, { css } from \"styled-components\";\n\ntype GridColumnVariant = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n\nexport type GridItemVariant = \"base\" | \"auto\" | true | GridColumnVariant;\n\nexport interface GridStyleProps {\n  container?: boolean;\n  spacing?: number;\n  direction?: \"column-reverse\" | \"column\" | \"row-reverse\" | \"row\";\n  justifyContent?:\n    | \"flex-start\"\n    | \"center\"\n    | \"flex-end\"\n    | \"space-between\"\n    | \"space-around\"\n    | \"space-evenly\";\n  alignItems?: \"flex-start\" | \"center\" | \"flex-end\" | \"stretch\" | \"baseline\";\n  wrap?: \"nowrap\" | \"wrap-reverse\" | \"wrap\";\n  position?:\n    | \"absolute\"\n    | \"fixed\"\n    | \"relative\"\n    | \"static\"\n    | \"sticky\"\n    | \"initial\";\n  fullHeight?: boolean;\n  item?: boolean;\n  xl?: GridItemVariant;\n  lg?: GridItemVariant;\n  md?: GridItemVariant;\n  sm?: GridItemVariant;\n  xs?: GridItemVariant;\n  overflowX?: \"auto\" | \"hidden\" | \"scroll\" | \"visible\";\n  overflowY?: \"auto\" | \"hidden\" | \"scroll\" | \"visible\";\n}\n\nconst wrapResolver = (wrap?: string, direction?: string) => {\n  if (wrap) return wrap;\n  else if (direction === \"column\" || direction === \"column-reverse\")\n    return \"nowrap\";\n  else return \"wrap\";\n};\n\nconst gridSizeResolver = (value: GridItemVariant) => {\n  switch (value) {\n    case \"base\":\n      return css`\n        flex: 0 0 auto;\n        -webkit-box-flex: 0;\n        max-width: none;\n        width: auto;\n      `;\n    case \"auto\":\n    case true:\n      return css`\n        flex-basis: 0rem;\n        -webkit-box-flex: 1;\n        flex-grow: 1;\n        max-width: 100%;\n      `;\n    default:\n      const percent = `${(100 / 12) * value}%`;\n      return css`\n        flex-basis: initial;\n        -webkit-box-flex: 0;\n        flex-grow: 0;\n        width: ${percent};\n      `;\n  }\n};\n\nconst mediaResolver = (value: GridItemVariant, media?: string) => {\n  if (media)\n    return css`\n      @media (min-width: ${media}) {\n        ${gridSizeResolver(value)}\n      }\n    `;\n\n  return gridSizeResolver(value);\n};\n\nexport const Container = styled.div<GridStyleProps>`\n  ${({\n    container,\n    spacing = 0,\n    direction,\n    justifyContent,\n    alignItems,\n    wrap,\n    position = \"initial\",\n    fullHeight,\n  }) =>\n    container &&\n    css`\n      display: flex;\n      width: ${spacing ? `calc(100% + ${spacing}rem)` : \"100%\"};\n      height: ${fullHeight ? `calc(100% + ${spacing}rem)` : \"initial\"};\n      margin: ${spacing ? `-${spacing / 2}rem` : \"initial\"};\n      flex-direction: ${direction || \"row\"};\n      justify-content: ${justifyContent || \"flex-start\"};\n      align-items: ${alignItems || \"flex-start\"};\n      flex-wrap: ${wrapResolver(wrap, direction)};\n      position: ${position};\n\n      & > div {\n        padding: ${spacing ? `${spacing / 2}rem` : \"initial\"};\n      }\n    `}\n\n  ${({ item, xs, sm, md, lg, xl, overflowX, overflowY }) =>\n    item &&\n    css`\n      box-sizing: border-box;\n      flex-grow: initial;\n\n      overflow-x: ${overflowX};\n      overflow-y: ${overflowY};\n\n      ${xs && mediaResolver(xs)}\n      ${sm && mediaResolver(sm, \"600px\")}\n      ${md && mediaResolver(md, \"900px\")}\n      ${lg && mediaResolver(lg, \"1200px\")}\n      ${xl && mediaResolver(xl, \"1500px\")}\n    `}\n`;\n","import styled, { css } from \"styled-components\";\n\nexport type IconButtonVariant = \"default\" | \"success\" | \"danger\" | \"text\";\n\nexport interface IconButtonStyleProps {\n  variant?: IconButtonVariant;\n  disabled?: boolean;\n  outlined?: boolean;\n  filled?: boolean;\n  small?: boolean;\n}\n\nconst getColorsByVariant = (\n  variant?: IconButtonVariant,\n  disabled?: boolean\n) => {\n  if (disabled)\n    return [\"var(--neutral-400)\", \"var(--neutral-400)\", \"var(--neutral)\"];\n\n  switch (variant) {\n    case \"text\":\n      return [\"var(--text)\", \"var(--text-title)\", \"var(--neutral)\"];\n    case \"success\":\n      return [\n        \"var(--green-light-600)\",\n        \"var(--green-light-800)\",\n        \"var(--green-light-100)\",\n      ];\n    case \"danger\":\n      return [\n        \"var(--red-light-600)\",\n        \"var(--red-light-800)\",\n        \"var(--red-light-100)\",\n      ];\n    default:\n      return [\"var(--blue-dark-600)\", \"var(--blue-dark-800)\", \"var(--neutral)\"];\n  }\n};\n\nexport const Container = styled.button.attrs({\n  type: \"button\",\n})<IconButtonStyleProps>`\n  outline: transparent;\n  border: initial;\n  width: ${({ small }) => (small ? \"3.2rem\" : \"4rem\")};\n  height: ${({ small }) => (small ? \"3.2rem\" : \"4rem\")};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 0.4rem;\n\n  &:focus {\n    outline: 0.2rem solid var(--gray);\n  }\n\n  ${({ variant, disabled, outlined, filled }) => {\n    const [textColor, textHover, bg] = getColorsByVariant(variant, disabled);\n\n    if (filled)\n      return css`\n        background-color: ${textColor};\n        color: ${bg};\n\n        &:hover {\n          background-color: ${textHover};\n          cursor: ${disabled ? \"no-drop\" : \"pointer\"};\n        }\n      `;\n\n    return css`\n      background-color: ${outlined ? bg : \"transparent\"};\n      color: ${textColor};\n\n      &:hover {\n        color: ${textHover};\n        cursor: ${disabled ? \"no-drop\" : \"pointer\"};\n      }\n    `;\n  }}\n`;\n","import styled from \"styled-components\";\n\nexport interface InputStyleProps {\n  fullWidth?: boolean;\n  readOnly?: boolean;\n}\n\nexport const Container = styled.div<Pick<InputStyleProps, \"fullWidth\">>`\n  position: relative;\n  width: ${({ fullWidth }) => (fullWidth ? \"100%\" : \"max-content\")};\n\n  span {\n    font-size: 1.2rem;\n    line-height: 1.5rem;\n    letter-spacing: 0.03rem;\n  }\n`;\n\nexport const InputContent = styled.div<Omit<InputStyleProps, \"fullWidth\">>`\n  width: 100%;\n  height: 4rem;\n  background: ${({ readOnly }) =>\n    readOnly ? \"var(--neutral)\" : \"var(--white)\"};\n  border: 0.1rem solid var(--neutral-400);\n  border-radius: 0.4rem;\n  padding: 1rem 1.2rem;\n  font-size: 1.4rem;\n  font-weight: 400;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 1.2rem;\n\n  :has(input:-webkit-autofill, input:autofill) {\n    background-color: light-dark(rgb(232, 240, 254), rgba(70, 90, 126, 0.4));\n    color: fieldtext !important;\n  }\n\n  &:focus-within {\n    outline: 0.2rem solid var(--gray);\n  }\n\n  input {\n    width: 100%;\n    flex: 1;\n    height: 100%;\n    border: none;\n    background: initial;\n    outline: initial;\n    appearance: none;\n    color: var(--text);\n\n    ::placeholder {\n      color: var(--neutral-400);\n    }\n\n    :-webkit-autofill,\n    :autofill {\n      appearance: initial;\n      background-color: initial !important;\n      background-image: initial !important;\n      color: initial !important;\n    }\n  }\n\n  svg:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const AddonContent = styled.div`\n  height: 4rem;\n  padding: 0.8rem 1.2rem;\n  margin-right: -1.4rem;\n  font-size: 1.4rem;\n  line-height: 2rem;\n  background-color: var(--neutral);\n  border: 0.1rem solid var(--neutral-400);\n  border-radius: 0 0.4rem 0.4rem 0;\n`;\n","import { Button } from \"components/Button\";\nimport styled from \"styled-components\";\n\nexport const InputFileContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 12.2rem;\n  border: 0.1rem dashed var(--neutral-400);\n  border-radius: 0.4rem;\n  padding: 1.6rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n\n  > div:first-child {\n    max-height: 100%;\n    overflow: auto;\n    z-index: 2;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 1rem;\n\n    > p {\n      pointer-events: none;\n    }\n  }\n\n  > button {\n    z-index: 2;\n    min-width: max-content;\n  }\n`;\n\nexport const HiddenInputFile = styled.input.attrs({ type: \"file\" })`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  height: 100%;\n  width: 100%;\n  opacity: 0;\n  z-index: 0;\n  pointer-events: fill;\n`;\n\nexport const CustomButton = styled(Button)`\n  color: var(--blue-dark-600);\n  border-color: var(--blue-dark-600);\n  background-color: var(--white);\n\n  &:hover {\n    color: var(--blue-dark-800);\n    border-color: var(--blue-dark-800);\n    background-color: var(--white);\n  }\n`;\n","import styled from \"styled-components\";\n\nexport interface LoadingStyleProps {\n  centered?: boolean;\n}\n\nexport const LoadingContainer = styled.div<LoadingStyleProps>`\n  margin: ${({ centered = false }) => (centered ? \"0 auto\" : \"initial\")};\n  width: max-content;\n`;\n\nexport const LoadingContent = styled.div`\n  width: 1.5rem;\n  height: 1.5rem;\n  margin: 0.2rem;\n  border: 0.2rem solid currentColor;\n  border-radius: 50%;\n  border-top-color: transparent;\n  border-bottom-color: transparent;\n  animation: rotating 1s infinite;\n\n  @keyframes rotating {\n    to {\n      transform: rotate(1turn);\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const MessageFile = styled.div`\n  display: flex;\n  gap: 0.8rem;\n  align-items: center;\n\n  p {\n    flex: 1;\n  }\n\n  svg {\n    cursor: pointer;\n\n    &:hover {\n      opacity: 0.7;\n    }\n  }\n`;\n\nexport const PreviewImg = styled.div`\n  width: 10rem;\n  height: 10rem;\n  border-radius: 0.4rem;\n  overflow: hidden;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.35);\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  padding: 10vh;\n  z-index: 15;\n`;\n\nexport const ModalContent = styled.div`\n  width: 40rem;\n  background-color: var(--white);\n  border-radius: 0.4rem;\n  animation: modal-fade-in 0.5s;\n\n  &:has(footer) main {\n    max-height: calc(80vh - 14.6rem);\n  }\n\n  @keyframes modal-fade-in {\n    from {\n      transform: translateY(-1rem);\n    }\n\n    to {\n      transform: translateY(0);\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nexport interface ModalMainStyleProps {\n  noOverflow?: boolean;\n}\n\nexport const Container = styled.main<ModalMainStyleProps>`\n  position: relative;\n  width: 100%;\n  max-height: calc(80vh - 7.3rem);\n  transition: height ease-in-out 0.2s;\n  padding: 1.6rem;\n  overflow-y: ${({ noOverflow }) => (noOverflow ? \"initial\" : \"auto\")};\n`;\n","import { ArrowDownIcon } from \"assets\";\nimport styled, { css } from \"styled-components\";\n\nexport interface MultiSelectStyleProps {\n  direction?: \"up\" | \"down\";\n  fullWidth?: boolean;\n  open?: boolean;\n  disabled?: boolean;\n}\n\nexport const Container = styled.div<Pick<MultiSelectStyleProps, \"fullWidth\">>`\n  width: ${({ fullWidth }) => (fullWidth ? \"100%\" : \"max-content\")};\n`;\n\nexport const MultiSelectContent = styled.button.attrs({\n  type: \"button\",\n})<Pick<MultiSelectStyleProps, \"disabled\">>`\n  position: relative;\n  width: 100%;\n  height: 4rem;\n  border-radius: 0.4rem;\n  border: 0.1rem solid var(--neutral-400);\n  padding: 1rem 1.2rem;\n  font-size: 1.4rem;\n  font-weight: 400;\n  text-align: start;\n  color: var(--text);\n  background: ${({ disabled }) =>\n    disabled ? \"var(--neutral)\" : \"var(--white)\"};\n  outline: transparent;\n\n  display: flex;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n  align-items: center;\n  gap: 1.2rem;\n\n  cursor: pointer;\n\n  &:focus {\n    outline: 0.2rem solid var(--gray);\n  }\n\n  span {\n    color: var(--neutral-400);\n  }\n\n  p {\n    flex: 1;\n\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    white-space: normal;\n    -webkit-line-clamp: 1;\n    word-break: break-all;\n  }\n`;\n\nexport const InputFilter = styled.input`\n  position: absolute;\n  width: calc(100% - 2rem);\n  height: 4rem;\n  border-radius: 0.4rem;\n  padding: 1rem 1.2rem;\n  left: 0;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  cursor: pointer;\n\n  ::placeholder {\n    color: var(--neutral-400);\n  }\n`;\n\nexport const ArrowIcon = styled(ArrowDownIcon)<\n  Pick<MultiSelectStyleProps, \"open\">\n>`\n  transition: 250ms ease-in-out;\n\n  ${({ open }) =>\n    open &&\n    css`\n      transform: rotate(180deg);\n    `}\n`;\n\nexport const OptionsContent = styled.dialog<\n  Pick<MultiSelectStyleProps, \"direction\">\n>`\n  width: 100%;\n  max-height: 17.4rem;\n  overflow: hidden auto;\n  position: absolute;\n  left: 0;\n  right: 0;\n  border-radius: 0.4rem;\n  background-color: var(--white);\n  border: 0.1rem solid var(--neutral-400);\n  padding: 0.8rem;\n  z-index: 5;\n\n  &[open] {\n    color: var(--text);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 0.4rem;\n  }\n\n  ${({ direction = \"down\" }) =>\n    direction === \"down\"\n      ? css`\n          bottom: -0.4rem;\n          transform: translateY(100%);\n        `\n      : css`\n          top: -0.4rem;\n          transform: translateY(-100%);\n        `}\n`;\n\nexport const ChipsContent = styled.div`\n  margin-top: 0.8rem;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  gap: 0.8rem;\n`;\n\nexport const NoOptionContent = styled.div`\n  padding: 2rem;\n`;\n","import styled from \"styled-components\";\n\nexport interface NavStyleProps {\n  hasLabel?: boolean;\n  isActive?: boolean;\n}\n\nexport const Container = styled.li<NavStyleProps>`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  height: ${({ hasLabel }) => (hasLabel ? \"4.9rem\" : \"4.2rem\")};\n  gap: 0.4rem;\n  padding: 0.4rem;\n  border-radius: 0.4rem;\n  background-color: ${({ isActive }) =>\n    isActive ? \"var(--white)\" : \"transparent\"};\n\n  &:hover {\n    background: var(--white);\n    box-shadow: 0 0.2rem 0.4rem var(--box-shadow),\n      0 0.4rem 0.4rem var(--box-shadow);\n  }\n\n  cursor: pointer;\n`;\n\nexport const IconContent = styled.div<Pick<NavStyleProps, \"isActive\">>`\n  height: 3.2rem;\n  width: 3.2rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${({ isActive }) =>\n    isActive ? \"var(--blue-dark-600)\" : \"var(--neutral-400)\"};\n`;\n\nexport const TitleContent = styled.div`\n  max-width: 15.8rem;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Label = styled.h3`\n  font-size: 1rem;\n  font-weight: 600;\n  line-height: 1.2rem;\n  color: var(--neutral-400);\n  text-transform: uppercase;\n`;\n\nexport const Title = styled.h2`\n  font-size: 1.4rem;\n  font-weight: 400;\n  line-height: 2rem;\n  color: var(--neutral-600);\n\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  white-space: normal;\n  -webkit-line-clamp: 1;\n  word-break: break-all;\n`;\n","import styled from \"styled-components\";\n\nexport const NoOptionsContent = styled.div`\n  padding: 2rem;\n`;\n\nexport const ContainerOptions = styled.button.attrs({\n  type: \"button\",\n})`\n  width: 100%;\n  padding: 0.8rem;\n  font-size: 1.4rem;\n  line-height: 2rem;\n  border-radius: 0.4rem;\n  text-align: start;\n  color: var(--text);\n  background-color: transparent;\n  outline: transparent;\n  border: none;\n\n  display: flex;\n  align-items: center;\n  gap: 0.8rem;\n\n  > p {\n    flex: 1;\n  }\n\n  &:hover {\n    background-color: var(--blue-dark-800);\n    color: var(--white);\n    cursor: pointer;\n  }\n\n  &:focus {\n    outline: 0.2rem solid var(--gray);\n  }\n`;\n","import styled from \"styled-components\";\n\nexport interface OverflowStyleProps {\n  lines?: number;\n  breaked?: boolean;\n}\n\nexport const OverflowContainer = styled.p<OverflowStyleProps>`\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  white-space: normal;\n  -webkit-line-clamp: ${({ lines = 1 }) => lines};\n  word-break: ${({ breaked }) => (breaked ? \"break-all\" : \"initial\")};\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.header`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: 1.6rem;\n  padding: 1.8rem;\n  border-radius: 0.4rem;\n  background-color: var(--neutral);\n\n  h2 {\n    font-size: 2rem;\n    line-height: 3rem;\n    color: var(--text-title);\n    font-weight: normal;\n  }\n`;\n\nexport const IconContent = styled.div`\n  align-self: flex-start;\n\n  svg {\n    max-height: 5rem;\n    max-width: 5rem;\n  }\n`;\n\nexport const InfoContent = styled.div`\n  flex: 1;\n`;\n\nexport const ActionsContent = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.8rem;\n\n  > button {\n    border: 0.1rem solid currentColor;\n  }\n`;\n","import { ArrowDownIcon } from \"assets\";\nimport styled, { css } from \"styled-components\";\n\nexport interface PaginationStyleProps {\n  isActive?: boolean;\n  disabled?: boolean;\n}\n\nexport const Container = styled.div`\n  width: max-content;\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n\nexport const PageButton = styled.button.attrs({\n  type: \"button\",\n})<PaginationStyleProps>`\n  width: 4rem;\n  padding: 0.6rem;\n  background-color: ${({ isActive }) =>\n    isActive ? \"var(--blue-light-200)\" : \"transparent\"};\n  border-radius: 0.4rem;\n  font-size: 1.4rem;\n  line-height: 2rem;\n  border: initial;\n\n  > svg {\n    height: 2rem;\n    margin: 0 auto;\n  }\n\n  ${({ disabled, isActive }) => {\n    if (disabled)\n      return css`\n        color: var(--neutral-400);\n      `;\n\n    return isActive\n      ? css`\n          color: var(--blue-dark-600);\n          background-color: var(--blue-light-400);\n        `\n      : css`\n          color: var(--blue-dark-600);\n\n          &:hover {\n            color: var(--blue-dark-800);\n            cursor: pointer;\n          }\n        `;\n  }}\n`;\n\nexport const LeftIcon = styled(ArrowDownIcon)`\n  transform: rotate(90deg);\n`;\n\nexport const RightIcon = styled(ArrowDownIcon)`\n  transform: rotate(-90deg);\n`;\n","import styled, { css } from \"styled-components\";\n\nexport interface RadioStyleProps {\n  noWrap?: boolean;\n  maxContent?: boolean;\n}\n\nexport const Container = styled.label<RadioStyleProps>`\n  width: ${({ maxContent }) => (maxContent ? \"max-content\" : \"100%\")};\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  cursor: pointer;\n\n  input {\n    width: 1.6rem;\n    height: 1.6rem;\n    margin-right: 0.8rem;\n    border: 1px solid var(--neutral-400);\n  }\n\n  > span {\n    flex: 1;\n    vertical-align: middle;\n    font-size: 1.4rem;\n    line-height: 1.6rem;\n\n    ${({ noWrap }) =>\n      noWrap &&\n      css`\n        display: -webkit-box;\n        -webkit-line-clamp: 1;\n        -webkit-box-orient: vertical;\n        overflow: hidden;\n        white-space: normal;\n      `}\n  }\n`;\n\nexport const Input = styled.input`\n  width: 1.6rem;\n  height: 1.6rem;\n  margin-right: 0.8rem;\n  border: 1px solid var(--neutral-400);\n\n  &:focus {\n    outline: 0.2rem solid var(--gray);\n  }\n`;\n","import styled from \"styled-components\";\n\nexport interface RangeStyleProps {\n  fullWidth?: boolean;\n  readOnly?: boolean;\n}\n\nexport const Container = styled.div<RangeStyleProps>`\n  width: ${({ fullWidth }) => (fullWidth ? \"100%\" : \"max-content\")};\n  display: flex;\n  align-items: center;\n  gap: 0.8rem;\n\n  &:focus-within {\n    outline: 0.2rem solid var(--gray);\n  }\n\n  > output {\n    font-size: 1.4rem;\n    line-height: 2rem;\n  }\n`;\n\nexport const RangeInput = styled.input.attrs({\n  type: \"range\",\n})`\n  flex: 1;\n`;\n","import { ArrowDownIcon, CloseIcon } from \"assets\";\nimport styled, { css } from \"styled-components\";\n\nexport interface SelectStyleProps {\n  fullWidth?: boolean;\n  open?: boolean;\n  disabled?: boolean;\n  direction?: \"up\" | \"down\";\n}\n\nexport const Container = styled.div<Pick<SelectStyleProps, \"fullWidth\">>`\n  width: ${({ fullWidth }) => (fullWidth ? \"100%\" : \"max-content\")};\n  position: relative;\n`;\n\nexport const SelectContent = styled.button.attrs({\n  type: \"button\",\n})<Pick<SelectStyleProps, \"disabled\">>`\n  position: relative;\n  width: 100%;\n  height: 4rem;\n  border-radius: 0.4rem;\n  border: 0.1rem solid var(--neutral-400);\n  padding: 1rem 1.2rem;\n  font-size: 1.4rem;\n  font-weight: 400;\n  text-align: start;\n  color: var(--text);\n  background: ${({ disabled }) =>\n    disabled ? \"var(--neutral)\" : \"var(--white)\"};\n  outline: transparent;\n\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n  gap: 1rem;\n\n  cursor: pointer;\n\n  &:hover .clear {\n    opacity: 1;\n  }\n\n  &:focus {\n    outline: 0.2rem solid var(--gray);\n  }\n\n  span {\n    color: var(--neutral-400);\n  }\n\n  p {\n    flex: 1;\n\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    white-space: normal;\n    -webkit-line-clamp: 1;\n    word-break: break-all;\n  }\n`;\n\nexport const InputFilter = styled.input`\n  position: absolute;\n  width: calc(100% - 2rem);\n  height: 4rem;\n  border-radius: 0.4rem;\n  padding: 1rem 1.2rem;\n  left: 0;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  cursor: pointer;\n\n  ::placeholder {\n    color: var(--neutral-400);\n  }\n`;\n\nexport const ClearIcon = styled(CloseIcon).attrs({\n  className: \"clear\",\n})`\n  display: block;\n  transition: ease-in-out 0.2s;\n  opacity: 0;\n  z-index: 2;\n`;\n\nexport const ArrowIcon = styled(ArrowDownIcon)<Pick<SelectStyleProps, \"open\">>`\n  transition: 250ms ease-in-out;\n\n  ${({ open }) =>\n    open &&\n    css`\n      transform: rotate(180deg);\n    `}\n`;\n\nexport const OptionsContent = styled.dialog<\n  Pick<SelectStyleProps, \"direction\">\n>`\n  width: 100%;\n  max-height: 17.4rem;\n  overflow: hidden auto;\n  position: absolute;\n  left: 0;\n  right: 0;\n  border-radius: 0.4rem;\n  background-color: var(--white);\n  border: 0.1rem solid var(--neutral-400);\n  padding: 0.8rem;\n  z-index: 5;\n\n  &[open] {\n    color: var(--text);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 0.4rem;\n  }\n\n  ${({ direction = \"down\" }) =>\n    direction === \"down\"\n      ? css`\n          bottom: -0.4rem;\n          transform: translateY(100%);\n        `\n      : css`\n          top: -0.4rem;\n          transform: translateY(-100%);\n        `}\n`;\n","import styled, { css } from \"styled-components\";\n\nexport interface StepperStyleProps {\n  direction?: \"vertical\" | \"horizontal\";\n  hasScroll?: boolean;\n  isActive?: boolean;\n}\n\nexport const Container = styled.div<Pick<StepperStyleProps, \"direction\">>`\n  display: flex;\n  gap: 1.8rem;\n  width: 100%;\n  height: 100%;\n\n  ${({ direction = \"vertical\" }) =>\n    direction === \"vertical\"\n      ? css`\n          flex-direction: column;\n          justify-content: center;\n          align-items: flex-start;\n        `\n      : css`\n          flex-direction: row;\n          justify-content: start;\n          align-items: flex-start;\n        `}\n`;\n\nexport const TitlesContent = styled.section<\n  Pick<StepperStyleProps, \"direction\">\n>`\n  max-width: 100%;\n  display: flex;\n  overflow-x: auto;\n  background-color: var(--neutral);\n  padding: 0.4rem;\n  border-radius: 0.4rem;\n\n  ${({ direction = \"vertical\" }) =>\n    direction === \"vertical\"\n      ? css`\n          width: 100%;\n          min-height: 4rem;\n          flex-direction: row;\n          align-items: center;\n        `\n      : css`\n          flex-direction: column;\n          align-items: stretch;\n\n          > p {\n            width: 100%;\n            text-align: right;\n          }\n        `}\n`;\n\nexport const TitleItem = styled.p<Pick<StepperStyleProps, \"isActive\">>`\n  width: max-content;\n  padding: 0.6rem 1.6rem;\n  text-align: center;\n  border-radius: 0.4rem;\n\n  &:hover,\n  &:focus {\n    color: var(--blue-dark-800);\n    cursor: pointer;\n  }\n\n  ${({ isActive }) =>\n    isActive &&\n    css`\n      position: relative;\n      color: var(--blue-dark-600);\n      background-color: var(--white);\n    `}\n`;\n\nexport const ChildrensContent = styled.div<\n  Pick<StepperStyleProps, \"hasScroll\">\n>`\n  width: 100%;\n  max-height: 100%;\n  flex: 1;\n  overflow-y: ${({ hasScroll }) => (hasScroll ? \"auto\" : \"initial\")};\n`;\n","import type { HTMLAttributes } from \"react\";\nimport styled from \"styled-components\";\n\nexport interface TFooterStyleProps\n  extends HTMLAttributes<HTMLTableSectionElement> {\n  recoil?: number;\n}\n\nexport const Container = styled.tfoot<TFooterStyleProps>`\n  position: -webkit-sticky;\n  position: sticky;\n  bottom: ${({ recoil = 0 }) => `-${recoil}rem`};\n  padding: 0.8rem;\n  font-weight: 700;\n  line-height: 2rem;\n\n  td:first-child {\n    border-top: 0.1rem solid var(--gray);\n    vertical-align: middle;\n    background-color: var(--neutral);\n  }\n\n  @media print {\n    position: relative;\n  }\n`;\n","import type { HTMLAttributes } from \"react\";\nimport styled from \"styled-components\";\n\nexport interface THeadStyleProps\n  extends HTMLAttributes<HTMLTableSectionElement> {\n  recoil?: number;\n}\n\nexport const Container = styled.thead<THeadStyleProps>`\n  position: -webkit-sticky;\n  position: sticky;\n  top: ${({ recoil = 0 }) => `-${recoil}rem`};\n\n  th:not(:first-child) {\n    border-left: 0.1rem solid var(--gray);\n  }\n`;\n","import type { TableHTMLAttributes } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nexport interface TableStyleProps extends TableHTMLAttributes<HTMLTableElement> {\n  fullWidth?: boolean;\n  spacing?: number;\n  overflow?: boolean;\n  fixed?: boolean;\n  hasFilter?: boolean;\n}\n\nexport const OverflowTable = styled.div<Pick<TableStyleProps, \"fullWidth\">>`\n  display: block;\n  width: ${({ fullWidth }) => (fullWidth ? \"100%\" : \"auto\")};\n  overflow-x: auto;\n`;\n\nexport const Container = styled.table<TableStyleProps>`\n  border: 0.1rem solid var(--gray);\n  border-top: none;\n  position: relative;\n\n  ${({ spacing = 0.8, overflow, fullWidth, fixed, hasFilter }) => css`\n    width: ${fullWidth ? \"100%\" : \"initial\"};\n    min-width: ${overflow ? \"100%\" : \"initial\"};\n    table-layout: ${fixed ? \"fixed\" : \"auto\"};\n    border-spacing: 0;\n\n    th,\n    td {\n      height: 4rem;\n      padding: ${spacing}rem;\n      border-collapse: collapse;\n      border-bottom: 0.1rem solid var(--gray);\n    }\n\n    thead tr th {\n      background-color: var(--neutral);\n    }\n\n    tbody tr td:first-of-type {\n      border-left: none;\n    }\n\n    tbody tr:last-of-type td {\n      border-bottom: none;\n    }\n\n    tfoot td {\n      border-bottom: none;\n    }\n\n    ${hasFilter\n      ? css`\n          border-bottom-left-radius: 0.4rem;\n          border-bottom-right-radius: 0.4rem;\n        `\n      : css`\n          border-radius: 0.4rem;\n\n          thead tr {\n            th {\n              border-top: 0.1rem solid var(--gray);\n            }\n\n            &:first-of-type th:first-of-type {\n              border-top-left-radius: 0.4rem;\n            }\n\n            &:first-of-type th:last-of-type {\n              border-top-right-radius: 0.4rem;\n            }\n          }\n        `}\n\n    ${overflow &&\n    css`\n      th {\n        white-space: pre;\n      }\n    `}\n  `}\n`;\n","import styled, { css } from \"styled-components\";\n\nexport type TagVariant = \"default\" | \"primary\" | \"success\" | \"danger\";\n\nexport interface TagStyleProps {\n  variant?: TagVariant;\n  filled?: boolean;\n}\n\nconst getColorsByVariant = (variant?: TagVariant) => {\n  switch (variant) {\n    case \"primary\":\n      return [\"var(--blue-dark-600)\", \"var(--blue-light-400)\"];\n    case \"success\":\n      return [\"var(--green-light-600)\", \"var(--green-light-100)\"];\n    case \"danger\":\n      return [\"var(--red-light-600)\", \"var(--red-light-100)\"];\n    default:\n      return [\"var(--white)\", \"var(--neutral-400)\"];\n  }\n};\n\nexport const Container = styled.mark<TagStyleProps>`\n  width: max-content;\n  padding: 0.4rem 0.8rem;\n  font-size: 1.2rem;\n  line-height: 1.5rem;\n  border-radius: 5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n\n  > svg {\n    height: 1.5rem;\n  }\n\n  ${({ variant, filled }) => {\n    const [textColor, bg] = getColorsByVariant(variant);\n\n    if (filled)\n      return css`\n        color: ${bg};\n        background-color: ${textColor};\n      `;\n\n    return css`\n      color: ${textColor};\n      background-color: ${bg};\n    `;\n  }}\n`;\n","import type { TdHTMLAttributes } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nexport interface TdStyleProps\n  extends TdHTMLAttributes<HTMLTableDataCellElement> {\n  width?: string;\n  hasDivisor?: boolean;\n}\n\nexport const Container = styled.td<TdStyleProps>`\n  width: ${({ width }) => width ?? \"auto\"};\n  max-width: ${({ width }) => width ?? \"auto\"};\n  vertical-align: middle;\n\n  ${({ hasDivisor }) =>\n    hasDivisor &&\n    css`\n      border-left: 0.1rem solid var(--gray);\n    `}\n`;\n","import styled from \"styled-components\";\n\nexport interface TextareaStyleProps {\n  fullWidth?: boolean;\n  readOnly?: boolean;\n}\n\nexport const Container = styled.div`\n  position: relative;\n  width: inherit;\n\n  span {\n    font-size: 1.2rem;\n    line-height: 1.5rem;\n    letter-spacing: 0.03rem;\n    display: block;\n  }\n`;\n\nexport const TextareaContent = styled.textarea<TextareaStyleProps>`\n  min-width: 10rem;\n  width: ${({ fullWidth }) => (fullWidth ? \"100%\" : \"max-content\")};\n  background: ${({ readOnly }) =>\n    readOnly ? \"var(--neutral)\" : \"var(--white)\"};\n  border-radius: 0.4rem;\n  border: 0.1rem solid var(--neutral-400);\n  padding: 1rem 1.2rem;\n  align-items: center;\n  color: var(--text);\n  font-size: 1.4rem;\n  line-height: 2rem;\n  font-weight: 400;\n  resize: none;\n\n  :focus {\n    outline: 0.2rem solid var(--gray);\n  }\n\n  ::placeholder {\n    color: var(--neutral-400);\n  }\n`;\n","import type { ThHTMLAttributes } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nexport interface ThStyleProps\n  extends ThHTMLAttributes<HTMLTableHeaderCellElement> {\n  width?: string;\n}\n\nexport const Container = styled.th<ThStyleProps>`\n  width: ${({ width }) => width ?? \"auto\"};\n  text-align: start;\n  font-weight: 700;\n  line-height: 2rem;\n  vertical-align: middle;\n\n  &:hover {\n    color: var(--text-title);\n  }\n\n  ${({ onClick }) =>\n    !!onClick &&\n    css`\n      cursor: pointer;\n\n      &::after {\n        content: \"⇵\";\n        margin-left: 0.5rem;\n        color: inherit;\n      }\n    `}\n`;\n","import { Button } from \"components/Button\";\nimport { IconButton } from \"components/IconButton\";\nimport styled from \"styled-components\";\n\nexport type ToastVariant = \"success\" | \"error\" | \"warning\" | \"info\";\n\nexport interface ToastStyleProps {\n  variant?: ToastVariant;\n}\n\nconst getColorByVariant = (variant: string) => {\n  switch (variant) {\n    case \"error\":\n      return \"var(--red)\";\n    case \"warning\":\n      return \"var(--yellow)\";\n    case \"info\":\n      return \"var(--cyan)\";\n    default:\n      return \"var(--green)\";\n  }\n};\n\nexport const Container = styled.div<ToastStyleProps>`\n  width: 30rem;\n  padding: 1.6rem;\n  display: flex;\n  justify-content: start;\n  align-items: flex-start;\n  background-color: var(--white);\n  gap: 1.6rem;\n\n  border-radius: 0.4rem;\n  box-shadow: 0.2rem 0.2rem 1.2rem 0.2rem var(--box-shadow),\n    0.2rem 0.2rem 1.2rem 0.2rem var(--box-shadow);\n\n  border-left: 0.4rem solid\n    ${({ variant }) => variant && getColorByVariant(variant)};\n\n  &:hover .close-Button {\n    opacity: 1;\n  }\n`;\n\nexport const IconContent = styled.div<ToastStyleProps>`\n  width: 2.4rem;\n  height: 2.4rem;\n  color: ${({ variant }) => variant && getColorByVariant(variant)};\n`;\n\nexport const InfoContent = styled.div`\n  flex: 1;\n  font-size: 1.4rem;\n  line-height: 2rem;\n\n  > p {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    white-space: pre-line;\n    -webkit-line-clamp: 4;\n    word-break: break-word;\n  }\n`;\n\nexport const TitleContent = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 2rem;\n`;\n\nexport const CustomButton = styled(Button)`\n  padding: 0.6rem 1.6rem;\n  margin-top: 1.6rem;\n  background-color: var(--neutral);\n  color: var(--text-title);\n\n  &:hover,\n  &:focus {\n    background-color: var(--gray);\n  }\n`;\n\nexport const CloseButton = styled(IconButton).attrs({\n  className: \"close-Button\",\n})`\n  width: 2rem;\n  height: 2rem;\n  opacity: 0;\n  transition: ease-in-out 0.2s;\n  color: var(--text);\n\n  &:hover {\n    color: var(--text-title);\n  }\n`;\n","import styled, { css } from \"styled-components\";\n\nexport interface ToggleStyleProps {\n  isActive?: boolean;\n}\n\nexport const ToggleContent = styled.label`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 1.6rem;\n  cursor: pointer;\n\n  p {\n    font-weight: bold;\n  }\n`;\n\nexport const Container = styled.button.attrs({\n  type: \"button\",\n})<ToggleStyleProps>`\n  width: 4.8rem;\n  height: 2.4rem;\n  border-radius: 2.4rem;\n  border: none;\n  cursor: pointer;\n  position: relative;\n  transition: background ease-in-out 0.2s;\n\n  &:focus {\n    outline: 0.2rem solid var(--gray);\n  }\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 1.8rem;\n    height: 1.8rem;\n    border-radius: 1.8rem;\n    background-color: var(--white);\n    top: 0.3rem;\n    transition: left ease-in-out 0.2s;\n  }\n\n  ${({ isActive }) =>\n    isActive\n      ? css`\n          background-color: var(--blue-light-500);\n\n          &::before {\n            left: 2.6rem;\n          }\n        `\n      : css`\n          background-color: var(--gray);\n\n          &::before {\n            left: 0.4rem;\n          }\n        `}\n`;\n","import styled, { css } from \"styled-components\";\n\nexport interface ToggleButtonStyleProps {\n  active?: boolean;\n  disabled?: boolean;\n}\n\nexport const ToggleContainer = styled.button.attrs({\n  type: \"button\",\n})<ToggleButtonStyleProps>`\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n  align-items: center;\n  padding: 0.6rem 1.2rem;\n  font-size: 1.4rem;\n  line-height: 2rem;\n  background-color: ${({ active }) =>\n    active ? \"var(--blue-light-400)\" : \"initial\"};\n  color: inherit;\n  border-radius: 0.4rem;\n  border: none;\n\n  &:focus {\n    outline: 0.2rem solid var(--gray);\n  }\n\n  svg {\n    height: 2rem;\n    vertical-align: middle;\n  }\n\n  ${({ disabled }) =>\n    disabled\n      ? css`\n          cursor: no-drop;\n          color: var(--neutral-400);\n        `\n      : css`\n          cursor: pointer;\n        `}\n`;\n","import styled from \"styled-components\";\n\nexport interface ToggleGroupStyleProps {\n  spacing?: number;\n  exclusive?: boolean;\n}\n\nexport const Container = styled.div<ToggleGroupStyleProps>`\n  min-width: max-content;\n  width: 100%;\n  padding: 0.4rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: ${({ spacing = 0.8, exclusive }) =>\n    exclusive ? \"initial\" : `${spacing}rem`};\n  background-color: var(--neutral);\n  color: var(--blue-dark-600);\n  border-radius: 0.4rem;\n\n  > button {\n    flex: 1;\n  }\n`;\n","import styled, { css } from \"styled-components\";\n\nexport interface TooltipStyleProps {\n  position?: \"top\" | \"right\" | \"bottom\" | \"left\";\n}\n\nexport const Container = styled.div`\n  position: relative;\n  cursor: default;\n\n  &:hover > .content-tooltip {\n    visibility: visible;\n  }\n`;\n\nexport const ContentTooltip = styled.div.attrs({\n  className: \"content-tooltip\",\n})<TooltipStyleProps>`\n  visibility: hidden;\n  width: max-content;\n  max-width: 30rem;\n  background-color: var(--text);\n  color: var(--white);\n  padding: 0.5rem;\n  border-radius: 0.6rem;\n\n  position: absolute;\n  z-index: 1;\n\n  ${({ position = \"top\" }) => {\n    switch (position) {\n      case \"right\":\n        return css`\n          transform: translate(100%, -50%);\n          top: 50%;\n          right: -1rem;\n\n          &::after {\n            content: \" \";\n            position: absolute;\n            top: 50%;\n            right: calc(100% - 0.1rem);\n            margin-top: -0.5rem;\n            border-width: 0.5rem;\n            border-style: solid;\n            border-color: transparent var(--text) transparent transparent;\n          }\n        `;\n      case \"bottom\":\n        return css`\n          transform: translate(-50%, 100%);\n          left: 50%;\n          bottom: -1rem;\n\n          &::after {\n            content: \" \";\n            position: absolute;\n            bottom: calc(100% - 0.1rem);\n            left: 50%;\n            margin-left: -0.5rem;\n            border-width: 0.5rem;\n            border-style: solid;\n            border-color: transparent transparent var(--text) transparent;\n          }\n        `;\n      case \"left\":\n        return css`\n          transform: translate(-100%, -50%);\n          top: 50%;\n          left: -1rem;\n\n          &::after {\n            content: \" \";\n            position: absolute;\n            top: 50%;\n            left: calc(100% - 0.1rem);\n            margin-top: -0.5rem;\n            border-width: 0.5rem;\n            border-style: solid;\n            border-color: transparent transparent transparent var(--text);\n          }\n        `;\n      default:\n        return css`\n          transform: translate(-50%, -100%);\n          left: 50%;\n          top: -1rem;\n\n          &::after {\n            content: \" \";\n            position: absolute;\n            top: calc(100% - 0.1rem);\n            left: 50%;\n            margin-left: -0.5rem;\n            border-width: 0.5rem;\n            border-style: solid;\n            border-color: var(--text) transparent transparent transparent;\n          }\n        `;\n    }\n  }}\n`;\n"],"names":[],"sourceRoot":""}